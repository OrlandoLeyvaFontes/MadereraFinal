/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas2;

//import Pantallas2.MenuPrincipal;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dto.CompraDTO;
import dto.SalidaDTO;
import interfaz.ISalidaSS;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//import Pantallas2.MenuPrincipal;
//import dto.MaderaDTO;
//import dto.VentaDTO;
//import java.util.List;
//import javax.swing.JOptionPane;
//import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Oley
 */
public class SalidaCompra extends javax.swing.JFrame {
private MenuPrincipal menuPrincipal;
 private ISalidaSS  iSalidaSS;
//
//    /**
//     * Creates new form SalidaCompra
//     */
    public SalidaCompra(MenuPrincipal menuPrincipal,ISalidaSS  iSalidaSS ) {
        this.menuPrincipal=menuPrincipal;
        this.iSalidaSS=iSalidaSS;
        initComponents();
        CargarMetodosIniciales();
    }
  private void CargarMetodosIniciales() {
        cargarMaderasEnTablas();
    }
  private void cargarMaderasEnTablas() {
        List<SalidaDTO> ventaDTOs = this.iSalidaSS.obtenerTodasLasSalidas();
        if (ventaDTOs != null && !ventaDTOs.isEmpty()) {
            llenarTablaMaderas(ventaDTOs);
        } else {
            JOptionPane.showMessageDialog(this, "No hay datos disponibles para mostrar.", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }
   private void llenarTablaMaderas(List<SalidaDTO> mdtos) {
               SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

    DefaultTableModel model = new DefaultTableModel(
        new String[]{"tipo movimiento", "madera", "fecha", "Cantidad", "usuario"}, 0
    ) {
        boolean[] canEdit = new boolean[]{false, false, false, false, false};  

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    for (SalidaDTO salidaDTO : mdtos) {
        // Convert GregorianCalendar to Date
        java.util.Date fechaCompraDate = salidaDTO.getFecha() instanceof java.util.GregorianCalendar
                ? ((java.util.GregorianCalendar) salidaDTO.getFecha()).getTime()
                : null;

        String fechaCompra = fechaCompraDate != null
                ? dateFormat.format(fechaCompraDate)
                : "Fecha No Disponible";

        model.addRow(new Object[]{
            salidaDTO.getTipoMovimiento(),
            salidaDTO.getMadera(),
            fechaCompra,  // Use the formatted fechaCompra here
            salidaDTO.getCantidad(),
            salidaDTO.getUsuario(),
        });
    }

    jTable1.setModel(model);
}
 private void exportarTablaAPDFConSelector() throws Exception {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar como PDF");
        fileChooser.setSelectedFile(new java.io.File("Salida.pdf"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            if (!ruta.endsWith(".pdf")) {
                ruta += ".pdf"; 
            }
            Document documento = new Document();
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));
            documento.open();
            documento.add(new Paragraph("Salida", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18, BaseColor.BLACK)));
            documento.add(new Paragraph(" ")); 

            PdfPTable tabla = new PdfPTable(jTable1.getColumnCount());
            tabla.setWidthPercentage(100);
            for (int i = 0; i < jTable1.getColumnCount(); i++) {
                tabla.addCell(new PdfPCell(new Phrase(jTable1.getColumnName(i), FontFactory.getFont(FontFactory.HELVETICA_BOLD))));
            }
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                for (int j = 0; j < jTable1.getColumnCount(); j++) {
                    Object valorCelda = jTable1.getValueAt(i, j);
                    tabla.addCell(valorCelda != null ? valorCelda.toString() : "");
                }
            }
            documento.add(tabla);
            documento.close();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(204, 204, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 497, 286));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/flecha-izquierda.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, 90));

        jButton2.setBackground(new java.awt.Color(51, 102, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carpeta.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 590, 180, 90));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SalidaMenu.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 730));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.setVisible(false);
menuPrincipal.setVisible(true);


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try {
        exportarTablaAPDFConSelector();
        JOptionPane.showMessageDialog(this, "PDF generado exitosamente.", "Información", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }




        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
